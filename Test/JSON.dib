#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":[],"languageName":"csharp","name":"csharp"}]}}

#!markdown

**The Polyglot Notebooks is a vscode extension, powered by .NET Interactive and i want import C# nudge package to C# code in Polyglot Notebooks.**

To import a C# NuGet package to a C# code cell in Polyglot Notebooks, you can use the #r directive followed by the NuGet package name and version. Here's an example:

要在Polyglot Notebooks中的C#代码单元格中导入一个C# NuGet包，您可以使用#r指令，后跟NuGet包名称和版本。以下是一个示例：

#!csharp

#r "nuget: Newtonsoft.Json, 13.0.1"

using Newtonsoft.Json;

var jsonString = "{\"name\": \"John\", \"age\": 30}";
var person = JsonConvert.DeserializeObject<Person>(jsonString);

public class Person
{
    public string Name { get; set; }
    public int Age { get; set; }
}

// Display the person's name and age.
person

#!markdown

In this example, we're importing the Newtonsoft.Json package version 13.0.1 using the #r directive. Then, we're using the JsonConvert.DeserializeObject method from the package to deserialize a JSON string into a Person object and displaying it using the display function.

在这个例子中，我们使用#r指令导入了Newtonsoft.Json包的13.0.1版本。然后，我们使用该包中的JsonConvert.DeserializeObject方法将一个JSON字符串反序列化为一个Person对象，并使用display函数显示它。

You can replace Newtonsoft.Json and 13.0.1 with the name and version of the NuGet package you want to use in your code.

您可以将Newtonsoft.Json和13.0.1替换为您想在代码中使用的NuGet包的名称和版本。
